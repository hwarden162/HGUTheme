% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggplot_colour_discrete.R
\name{scale_colour_ukri_d}
\alias{scale_colour_ukri_d}
\title{UKRI Blues Colour Scales (Discrete)}
\usage{
scale_colour_ukri_d(
  aesthetics = "colour",
  scale_name = "UKRI_Blues",
  palette = ukri_blues_palette_func_gen(),
  name = ggplot2::waiver(),
  breaks = ggplot2::waiver(),
  labels = ggplot2::waiver(),
  limits = NULL,
  expand = ggplot2::waiver(),
  na.translate = TRUE,
  na.value = cruk_grey(),
  drop = TRUE,
  guide = "legend",
  position = "left",
  super = ggplot2::ScaleDiscrete
)
}
\arguments{
\item{aesthetics}{The names of the aesthetics that this scale works with.}

\item{scale_name}{The name of the scale that should be used for error
messages associated with this scale.}

\item{palette}{A palette function that when called with a single integer
argument (the number of levels in the scale) returns the values that
they should take.}

\item{name}{The name of the scale. Used as the axis or legend title. If
\code{waiver()}, the default, the name of the scale is taken from the first
mapping used for that aesthetic. If NULL, the legend title will be omitted.}

\item{breaks}{Passed to \code{ggplot2::discrete_scale()}.}

\item{labels}{Passed to \code{ggplot2::discrete_scale()}.}

\item{limits}{Passed to \code{ggplot2::discrete_scale()}.}

\item{expand}{Passed to \code{ggplot2::discrete_scale()}.}

\item{na.translate}{Setting to \code{FALSE} will remove \code{NA} values from the
colour theme.}

\item{na.value}{The colour of \code{NA} values}

\item{drop}{Should unused factor levels be omitted from the scale?}

\item{guide}{A function used to create a guide or its name.}

\item{position}{The position of the scale.}

\item{super}{The super class to use for the constructed scale.}
}
\value{
A layer that can be added to a \code{ggplot2} object.
}
\description{
A layer that can be added to \code{ggplot2} plots to change the colour aesthetic
to interpolate values from the blues used in the UKRI logo.
}
\examples{

  library(ggplot2)
  ggplot(
    data = data.frame(x = runif(60), y = runif(60), colour = rep(c("A", "B", "C"), 20)),
    mapping = aes(x = x, y = y, colour = colour)
  ) +
    geom_point() + theme_classic() +
    scale_colour_ukri_d()

}
